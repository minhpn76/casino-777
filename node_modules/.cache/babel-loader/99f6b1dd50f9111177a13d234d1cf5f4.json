{"ast":null,"code":"import { createTrackingData } from \"./reactionCleanupTrackingCommon\";\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\n\nexport function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n  var cleanupTokenToReactionTrackingMap = new Map();\n  var globalCleanupTokensCounter = 1;\n  var registry = new FinalizationRegistry(function cleanupFunction(token) {\n    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n\n    if (trackedReaction) {\n      trackedReaction.reaction.dispose();\n      cleanupTokenToReactionTrackingMap.delete(token);\n    }\n  });\n  return {\n    addReactionToTrack: function addReactionToTrack(reactionTrackingRef, reaction, objectRetainedByReact) {\n      var token = globalCleanupTokensCounter++;\n      registry.register(objectRetainedByReact, token, reactionTrackingRef);\n      reactionTrackingRef.current = createTrackingData(reaction);\n      reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n      cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n      return reactionTrackingRef.current;\n    },\n    recordReactionAsCommitted: function recordReactionAsCommitted(reactionRef) {\n      registry.unregister(reactionRef);\n\n      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n      }\n    },\n    forceCleanupTimerToRunNowForTests: function forceCleanupTimerToRunNowForTests() {// When FinalizationRegistry in use, this this is no-op\n    },\n    resetCleanupScheduleForTests: function resetCleanupScheduleForTests() {// When FinalizationRegistry in use, this this is no-op\n    }\n  };\n}","map":{"version":3,"sources":["../../src/utils/createReactionCleanupTrackingUsingFinalizationRegister.ts"],"names":[],"mappings":"AAEA,SAGI,kBAHJ,QAIO,iCAJP;AAMA;;AAEG;;AACH,OAAM,SAAU,sDAAV,CACF,oBADE,EAC0E;EAE5E,IAAM,iCAAiC,GAAG,IAAI,GAAJ,EAA1C;EACA,IAAI,0BAA0B,GAAG,CAAjC;EAEA,IAAM,QAAQ,GAAG,IAAI,oBAAJ,CAAyB,SAAS,eAAT,CAAyB,KAAzB,EAAsC;IAC5E,IAAM,eAAe,GAAG,iCAAiC,CAAC,GAAlC,CAAsC,KAAtC,CAAxB;;IACA,IAAI,eAAJ,EAAqB;MACjB,eAAe,CAAC,QAAhB,CAAyB,OAAzB;MACA,iCAAiC,CAAC,MAAlC,CAAyC,KAAzC;IACH;EACJ,CANgB,CAAjB;EAQA,OAAO;IACH,kBAAkB,EAAlB,4BACI,mBADJ,EAEI,QAFJ,EAGI,qBAHJ,EAGiC;MAE7B,IAAM,KAAK,GAAG,0BAA0B,EAAxC;MAEA,QAAQ,CAAC,QAAT,CAAkB,qBAAlB,EAAyC,KAAzC,EAAgD,mBAAhD;MACA,mBAAmB,CAAC,OAApB,GAA8B,kBAAkB,CAAC,QAAD,CAAhD;MACA,mBAAmB,CAAC,OAApB,CAA4B,gCAA5B,GAA+D,KAA/D;MACA,iCAAiC,CAAC,GAAlC,CAAsC,KAAtC,EAA6C,mBAAmB,CAAC,OAAjE;MAEA,OAAO,mBAAmB,CAAC,OAA3B;IACH,CAdE;IAeH,yBAAyB,EAAzB,mCAA0B,WAA1B,EAAuF;MACnF,QAAQ,CAAC,UAAT,CAAoB,WAApB;;MAEA,IAAI,WAAW,CAAC,OAAZ,IAAuB,WAAW,CAAC,OAAZ,CAAoB,gCAA/C,EAAiF;QAC7E,iCAAiC,CAAC,MAAlC,CACI,WAAW,CAAC,OAAZ,CAAoB,gCADxB;MAGH;IACJ,CAvBE;IAwBH,iCAAiC,EAAA,6CAAA,CAC7B;IACH,CA1BE;IA2BH,4BAA4B,EAAA,wCAAA,CACxB;IACH;EA7BE,CAAP;AA+BH","sourceRoot":"","sourcesContent":["import { createTrackingData } from \"./reactionCleanupTrackingCommon\";\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\nexport function createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n    var cleanupTokenToReactionTrackingMap = new Map();\n    var globalCleanupTokensCounter = 1;\n    var registry = new FinalizationRegistry(function cleanupFunction(token) {\n        var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n        if (trackedReaction) {\n            trackedReaction.reaction.dispose();\n            cleanupTokenToReactionTrackingMap.delete(token);\n        }\n    });\n    return {\n        addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\n            var token = globalCleanupTokensCounter++;\n            registry.register(objectRetainedByReact, token, reactionTrackingRef);\n            reactionTrackingRef.current = createTrackingData(reaction);\n            reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n            cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n            return reactionTrackingRef.current;\n        },\n        recordReactionAsCommitted: function (reactionRef) {\n            registry.unregister(reactionRef);\n            if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n                cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n            }\n        },\n        forceCleanupTimerToRunNowForTests: function () {\n            // When FinalizationRegistry in use, this this is no-op\n        },\n        resetCleanupScheduleForTests: function () {\n            // When FinalizationRegistry in use, this this is no-op\n        }\n    };\n}\n//# sourceMappingURL=createReactionCleanupTrackingUsingFinalizationRegister.js.map"]},"metadata":{},"sourceType":"module"}